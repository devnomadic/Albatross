# CI/CD Pipeline for Development
name: CI

on:
  push:
    branches: [ develop, feature/*, bugfix/* ]
#  pull_request:
#    branches: [ main, master, develop ]

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '20'

jobs:
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Check code formatting
      run: dotnet format Albatross.sln --verify-no-changes
      
    - name: Lint JavaScript/Worker file
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install ESLint
      run: npm install -g eslint
      
    - name: Lint Cloudflare Worker
      run: |
        if [ -f "cloudflare-worker.js" ]; then
          eslint cloudflare-worker.js --no-eslintrc --env es6,browser --parser-options '{"ecmaVersion": 2022}' || echo "ESLint issues found"
        fi

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Cache .NET packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build application
      run: dotnet build --configuration Release --no-restore
      
    - name: Run tests
      run: |
        if ls *.Tests.csproj 1> /dev/null 2>&1; then
          dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage"
        else
          echo "No test projects found, skipping tests"
        fi
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: TestResults/
        retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Run vulnerability scan
      run: dotnet list package --vulnerable --include-transitive 2>&1 | tee vulnerability-report.txt
      
    - name: Check for vulnerabilities
      run: |
        if grep -q "has the following vulnerable packages" vulnerability-report.txt; then
          echo "⚠️ Vulnerabilities found!"
          cat vulnerability-report.txt
          exit 1
        else
          echo "✅ No vulnerabilities found"
        fi
      
    - name: Upload vulnerability report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: vulnerability-report
        path: vulnerability-report.txt
        retention-days: 30

  worker-validation:
    name: Validate Cloudflare Worker
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install Wrangler
      run: npm install -g wrangler
      
    - name: Validate wrangler.toml
      run: |
        if [ -f "wrangler.toml" ]; then
          wrangler whoami || echo "Not authenticated (expected in CI)"
          echo "wrangler.toml validation completed"
        else
          echo "No wrangler.toml found"
        fi
      
    - name: Syntax check worker
      run: |
        if [ -f "cloudflare-worker.js" ]; then
          node -c cloudflare-worker.js
          echo "✅ Worker syntax is valid"
        else
          echo "No worker file found"
        fi

  preview-build:
    name: Preview Build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'synchronize'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Update IP manifests
      run: |
        if [ -f "./update-manifests.sh" ]; then
          chmod +x ./update-manifests.sh
          ./update-manifests.sh
        fi
      
    - name: Build and publish
      run: |
        dotnet build --configuration Release --no-restore
        dotnet publish Albatross.csproj --configuration Release --output ./preview --no-build
      
    - name: Upload preview build
      uses: actions/upload-artifact@v4
      with:
        name: preview-build-${{ github.event.number }}
        path: ./preview/wwwroot/
        retention-days: 7