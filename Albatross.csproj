<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
  </PropertyGroup>
  <!-- Exclude Generated folder from automatic compilation to avoid duplicates -->
  <ItemGroup>
    <Compile Remove="Generated/**/*.cs" />
  </ItemGroup>

  <PropertyGroup>
    <AssemblyTitle>$([System.DateTime]::Now.ToString(yyyyMMdd-HHmm))</AssemblyTitle>
  </PropertyGroup>  <!-- Pre-build target to generate authentication keys -->
  <Target Name="GenerateAuthKey" BeforeTargets="BeforeCompile" Condition="'$(SkipCodeGeneration)' != 'true' AND '$(DesignTimeBuild)' != 'true'">
    <Message Text="Generating build-time authentication key..." Importance="high" />
      <!-- Create Generated directory if it doesn't exist -->
    <MakeDir Directories="$(MSBuildProjectDirectory)/Generated" Condition="!Exists('$(MSBuildProjectDirectory)/Generated')" />
    
    <!-- Determine environment parameter from environment variable or default to production -->
    <PropertyGroup>
      <AlbatrossEnvironment Condition="'$(AlbatrossEnvironment)' == ''">$(ALBATROSS_ENVIRONMENT)</AlbatrossEnvironment>
      <AlbatrossEnvironment Condition="'$(AlbatrossEnvironment)' == ''">production</AlbatrossEnvironment>
    </PropertyGroup>
    
    <!-- Run PowerShell script to generate auth key with environment parameter -->
    <Exec Command="pwsh -ExecutionPolicy Bypass -File &quot;$(MSBuildProjectDirectory)/Generate-AuthKey.ps1&quot; -OutputPath &quot;$(MSBuildProjectDirectory)/Generated&quot; -Environment &quot;$(AlbatrossEnvironment)&quot; -Verbose" 
          ContinueOnError="false" 
          WorkingDirectory="$(MSBuildProjectDirectory)" />
    
    <Message Text="Authentication key generation completed for environment: $(AlbatrossEnvironment)" Importance="high" />
  </Target>  <!-- Post-auth-key target to process worker -->
  <Target Name="ProcessWorker" AfterTargets="GenerateAuthKey" BeforeTargets="BeforeCompile" Condition="'$(SkipCodeGeneration)' != 'true' AND '$(DesignTimeBuild)' != 'true'">
    <Message Text="Processing Cloudflare Worker with generated constants..." Importance="high" />
    
    <!-- Process the worker template with generated constants -->
    <Exec Command="pwsh -ExecutionPolicy Bypass -File &quot;$(MSBuildProjectDirectory)/Process-Worker.ps1&quot; -TemplateFile &quot;$(MSBuildProjectDirectory)/cloudflare-worker.template.js&quot; -OutputFile &quot;$(MSBuildProjectDirectory)/cloudflare-worker.js&quot; -ConstantsFile &quot;$(MSBuildProjectDirectory)/Generated/build-constants.js&quot; -Verbose" 
          ContinueOnError="false" 
          WorkingDirectory="$(MSBuildProjectDirectory)" />
      <Message Text="Worker processing completed" Importance="high" />
  </Target>  <!-- Include generated C# files in compilation -->
  <Target Name="IncludeGeneratedFiles" BeforeTargets="BeforeCompile" AfterTargets="ProcessWorker" Condition="'$(SkipCodeGeneration)' != 'true' AND '$(DesignTimeBuild)' != 'true'">
    <ItemGroup>
      <Compile Include="Generated/BuildConstants.cs" Condition="Exists('Generated/BuildConstants.cs')" />
    </ItemGroup>
  </Target>  <!-- Generate dynamic sitemap before any build activities -->
  <Target Name="GenerateSitemap" BeforeTargets="Build;Restore;PrepareForBuild;BeforeBuild" Condition="'$(SkipCodeGeneration)' != 'true' AND '$(DesignTimeBuild)' != 'true'">
    <Message Text="Generating dynamic sitemap..." Importance="high" />
    
    <!-- Determine domain from environment variable or use default -->
    <PropertyGroup>
      <SitemapDomain Condition="'$(SitemapDomain)' == ''">$(SITEMAP_DOMAIN)</SitemapDomain>
      <SitemapDomain Condition="'$(SitemapDomain)' == ''">https://albatross.devnomadic.com</SitemapDomain>
      <CurrentDate>$([System.DateTime]::UtcNow.ToString(yyyy-MM-dd))</CurrentDate>
    </PropertyGroup>

    <!-- Create sitemap XML content -->
    <PropertyGroup>
      <SitemapHeader>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9
        http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd"&gt;

  &lt;!-- Main Application Page --&gt;
  &lt;url&gt;
    &lt;loc&gt;$(SitemapDomain)/&lt;/loc&gt;
    &lt;lastmod&gt;$(CurrentDate)&lt;/lastmod&gt;
    &lt;changefreq&gt;weekly&lt;/changefreq&gt;
    &lt;priority&gt;1.0&lt;/priority&gt;
  &lt;/url&gt;</SitemapHeader>
      
      <SitemapFooter>
  &lt;url&gt;
    &lt;loc&gt;$(SitemapDomain)/robots.txt&lt;/loc&gt;
    &lt;lastmod&gt;$(CurrentDate)&lt;/lastmod&gt;
    &lt;changefreq&gt;monthly&lt;/changefreq&gt;
    &lt;priority&gt;0.3&lt;/priority&gt;
  &lt;/url&gt;

  &lt;!-- Note: Search functionality intentionally excluded per robots.txt --&gt;
  &lt;!-- AbuseIPDB search endpoints are blocked from crawling --&gt;

&lt;/urlset&gt;</SitemapFooter>
    </PropertyGroup>

    <!-- Find all IP manifest files -->
    <ItemGroup>
      <IpManifestFiles Include="wwwroot/ip-manifests/*.json" />
    </ItemGroup>

    <!-- Generate manifest URLs -->
    <PropertyGroup>
      <ManifestUrls>@(IpManifestFiles -> '
  &lt;url&gt;
    &lt;loc&gt;$(SitemapDomain)/ip-manifests/%(Filename)%(Extension)&lt;/loc&gt;
    &lt;lastmod&gt;$(CurrentDate)&lt;/lastmod&gt;
    &lt;changefreq&gt;daily&lt;/changefreq&gt;
    &lt;priority&gt;0.8&lt;/priority&gt;
  &lt;/url&gt;', '')</ManifestUrls>
    </PropertyGroup>

    <!-- Write sitemap file -->
    <WriteLinesToFile File="wwwroot/sitemap.xml" 
                      Lines="$(SitemapHeader)$(ManifestUrls)$(SitemapFooter)"
                      Overwrite="true" 
                      Encoding="UTF-8" />
    
    <Message Text="Sitemap generated: wwwroot/sitemap.xml with domain $(SitemapDomain)" Importance="high" />
  </Target><!-- Clean generated files -->
  <Target Name="CleanGenerated" BeforeTargets="Clean">
    <ItemGroup>
      <GeneratedFiles Include="Generated/**/*" />
      <GeneratedFiles Include="cloudflare-worker.js" Condition="Exists('cloudflare-worker.js')" />
      <GeneratedFiles Include="build.env" Condition="Exists('build.env')" />
      <GeneratedFiles Include="build-manifest.json" Condition="Exists('build-manifest.json')" />
    </ItemGroup>
    <Delete Files="@(GeneratedFiles)" />
    <RemoveDir Directories="Generated" Condition="Exists('Generated')" />
    <Message Text="Cleaned generated files" Importance="high" />
  </Target>
  
  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="8.0.13" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="8.0.13" PrivateAssets="all" />
  </ItemGroup>

</Project>
